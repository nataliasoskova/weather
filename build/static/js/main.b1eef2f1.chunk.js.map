{"version":3,"sources":["components/UserLocation.js","components/Navbar.js","App.js","index.js"],"names":["UserLocation","props","weather","temperature","description","region","country","wind_speed","pressure","precip","humidity","img","className","src","alt","Navbar","onSubmit","e","changeLocation","type","placeholder","onChange","changeRegion","target","value","App","state","userPosition","latitude","longitude","regionInput","setState","preventDefault","Axios","get","then","res","userWeather","data","current","weather_descriptions","location","name","weather_icons","navigator","geolocation","getCurrentPosition","position","pos","coords","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1eef2f1.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function UserLocation(props) {\n\n    const { temperature, description, region, country, wind_speed, pressure, precip, humidity, img } = props.weather;\n\n    return (\n        <div className=\"user-weather\">\n            \n                \n                    <h1><b>{region}</b>  {country}</h1>\n                    \n                    <p><b>{temperature}<sup>o</sup>C </b>, {description}</p>\n             \n                    <div className=\"roatate_me\">\n                    \n                        <img className=\"mainImg rotating\" src={img} alt=\"weather-img\" />\n                \n                    </div>\n                  \n               \n            \n\n            <div className=\"d-flex flex-row other-weather-info\">\n                <div className=\"weather-info\">\n                    <p><b>Wind Speed</b></p>\n                    <h2>{wind_speed}</h2>\n                    <p>km/h</p>\n                </div>\n\n                <div className=\"weather-info\">\n                    <p><b>Pressure</b></p>\n                    <h2>{pressure}</h2>\n                    <p>millibar</p>\n                </div>\n\n                <div className=\"weather-info\">\n                    <p><b>Precipitation</b></p>\n                    <h2>{precip}</h2>\n                    <p>mm</p>\n                </div>\n\n                <div className=\"weather-info m-10\">\n                    <p><b>Humidity</b></p>\n                    <h2>{humidity}</h2>\n                    <p>%</p>\n                </div>\n\n            </div>\n        </div>\n    )\n}","import React from 'react'\n\nexport default function Navbar(props) {\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-12\">\n                <h1 className=\"title text-center\">Weather for Today</h1>\n            </div>\n\n            <div className=\"col-12\">\n                <form className=\"region text-center\" onSubmit={(e) => { props.changeLocation(e) }}>\n                    <input type=\"text\" className=\"regioninput text-center pulse\"  placeholder=\"Type your city\" onChange={(e) => { props.changeRegion(e.target.value) }} />\n                </form>\n            </div>\n\n        </div>\n    )\n}","import React from 'react';\nimport UserLocation from './components/UserLocation.js';\nimport Navbar from './components/Navbar.js'\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Axios from 'axios';\n\nclass App extends React.Component {\n\n  //state\n  state = {\n    userPosition: {\n      latitude: 35,\n      longitude: 139\n    },\n    weather: {},\n    regionInput: \"\"\n  }\n\n  componentDidMount() {\n    //check whether geolocation is supported\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n\n        //get the lat and long of your device\n        let pos = {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        }\n\n        this.setState({ userPosition: pos });\n\n        //Weather Api call\n        Axios.get(`http://api.weatherstack.com/current?access_key=609715c1270e1914101c3bb6a5e33a77&query=${this.state.userPosition.latitude},${this.state.userPosition.longitude}`).then(res => {\n\n          let userWeather = {\n            temperature: res.data.current.temperature,\n            description: res.data.current.weather_descriptions[0],\n            \n            region: res.data.location.region,\n            country: res.data.location.country,\n            wind_speed: res.data.current.wind_speed,\n            pressure: res.data.current.pressure,\n            precip: res.data.current.precip,\n            humidity: res.data.current.humidity,\n            img: res.data.current.weather_icons\n          }\n\n          this.setState({ weather: userWeather });\n        })\n      })\n    }\n  }\n\n  //update the value of the the input field with state\n  changeRegion = (value) => {\n    this.setState({ regionInput: value })\n  }\n\n  //update the weather depending upon the value user entered\n  changeLocation = (e) => {\n\n    e.preventDefault()\n\n    Axios.get(`http://api.weatherstack.com/current?access_key=609715c1270e1914101c3bb6a5e33a77&query=${this.state.regionInput}`).then(res => {\n\n      let userWeather = {\n        temperature: res.data.current.temperature,\n        description: res.data.current.weather_descriptions[0],\n        location: res.data.location.name,\n        region: res.data.location.region,\n        country: res.data.location.country,\n        wind_speed: res.data.current.wind_speed,\n        pressure: res.data.current.pressure,\n        precip: res.data.current.precip,\n        humidity: res.data.current.humidity,\n        img: res.data.current.weather_icons\n      }\n\n      this.setState({ weather: userWeather });\n\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <Navbar changeRegion={this.changeRegion} changeLocation={this.changeLocation} />\n          <UserLocation weather={this.state.weather} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}